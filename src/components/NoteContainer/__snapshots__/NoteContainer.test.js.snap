// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NoteContainer should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NoteContainer
    notes={
      Array [
        Object {
          "id": 4,
          "items": Array [
            "item4a",
            "item4b",
          ],
          "title": "Title Four",
        },
        Object {
          "id": 5,
          "items": Array [
            "item5a",
            "item5b",
          ],
          "title": "Title Five",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ViewNote
          note={
            Object {
              "id": 4,
              "items": Array [
                "item4a",
                "item4b",
              ],
              "title": "Title Four",
            }
          }
        />,
        <ViewNote
          note={
            Object {
              "id": 5,
              "items": Array [
                "item5a",
                "item5b",
              ],
              "title": "Title Five",
            }
          }
        />,
      ],
      "className": "note-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "4",
        "nodeType": "function",
        "props": Object {
          "note": Object {
            "id": 4,
            "items": Array [
              "item4a",
              "item4b",
            ],
            "title": "Title Four",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "5",
        "nodeType": "function",
        "props": Object {
          "note": Object {
            "id": 5,
            "items": Array [
              "item5a",
              "item5b",
            ],
            "title": "Title Five",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ViewNote
            note={
              Object {
                "id": 4,
                "items": Array [
                  "item4a",
                  "item4b",
                ],
                "title": "Title Four",
              }
            }
          />,
          <ViewNote
            note={
              Object {
                "id": 5,
                "items": Array [
                  "item5a",
                  "item5b",
                ],
                "title": "Title Five",
              }
            }
          />,
        ],
        "className": "note-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "4",
          "nodeType": "function",
          "props": Object {
            "note": Object {
              "id": 4,
              "items": Array [
                "item4a",
                "item4b",
              ],
              "title": "Title Four",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "5",
          "nodeType": "function",
          "props": Object {
            "note": Object {
              "id": 5,
              "items": Array [
                "item5a",
                "item5b",
              ],
              "title": "Title Five",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
